{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\MDJen\\\\Documents\\\\BootcampActivities\\\\ReduxStoreRefactor\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:\\\\Users\\\\MDJen\\\\Documents\\\\BootcampActivities\\\\ReduxStoreRefactor\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{useReducer}from\"react\";import{UPDATE_PRODUCTS,ADD_TO_CART,UPDATE_CART_QUANTITY,REMOVE_FROM_CART,ADD_MULTIPLE_TO_CART,UPDATE_CATEGORIES,UPDATE_CURRENT_CATEGORY,CLEAR_CART,TOGGLE_CART}from\"./actions\";//add initial state\nvar initialState={products:[],cart:[],cartOpen:false,categories:[],currentCategory:null};//create reducer function\n// export const reducer = (state, action) => {\nexport default function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case UPDATE_PRODUCTS:return _objectSpread(_objectSpread({},state),{},{products:_toConsumableArray(action.products)});case ADD_TO_CART:return _objectSpread(_objectSpread({},state),{},{cartOpen:true,cart:[].concat(_toConsumableArray(state.cart),[action.product])});case ADD_MULTIPLE_TO_CART:return _objectSpread(_objectSpread({},state),{},{cart:[].concat(_toConsumableArray(state.cart),_toConsumableArray(action.products))});case UPDATE_CART_QUANTITY:return _objectSpread(_objectSpread({},state),{},{cartOpen:true,cart:state.cart.map(function(product){if(action._id===product._id){product.purchaseQuantity=action.purchaseQuantity;}return product;})});case REMOVE_FROM_CART:var newState=state.cart.filter(function(product){return product._id!==action._id;});return _objectSpread(_objectSpread({},state),{},{cartOpen:newState.length>0,cart:newState});case CLEAR_CART:return _objectSpread(_objectSpread({},state),{},{cartOpen:false,cart:[]});case TOGGLE_CART:return _objectSpread(_objectSpread({},state),{},{cartOpen:!state.cartOpen});case UPDATE_CATEGORIES:return _objectSpread(_objectSpread({},state),{},{categories:_toConsumableArray(action.categories)});case UPDATE_CURRENT_CATEGORY:return _objectSpread(_objectSpread({},state),{},{currentCategory:action.currentCategory});default:return state;}};// export function useProductReducer(initialState) {\n//   return useReducer(reducer, initialState)\n// }","map":{"version":3,"sources":["C:/Users/MDJen/Documents/BootcampActivities/ReduxStoreRefactor/client/src/utils/reducers.js"],"names":["useReducer","UPDATE_PRODUCTS","ADD_TO_CART","UPDATE_CART_QUANTITY","REMOVE_FROM_CART","ADD_MULTIPLE_TO_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","CLEAR_CART","TOGGLE_CART","initialState","products","cart","cartOpen","categories","currentCategory","reducer","state","action","type","product","map","_id","purchaseQuantity","newState","filter","length"],"mappings":"qZAAA,OAASA,UAAT,KAA2B,OAA3B,CACA,OACEC,eADF,CAEEC,WAFF,CAGEC,oBAHF,CAIEC,gBAJF,CAKEC,oBALF,CAMEC,iBANF,CAOEC,uBAPF,CAQEC,UARF,CASEC,WATF,KAUO,WAVP,CAYA;AACA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,QAAQ,CAAE,EADS,CAEnBC,IAAI,CAAE,EAFa,CAGnBC,QAAQ,CAAC,KAHU,CAInBC,UAAU,CAAC,EAJQ,CAKnBC,eAAe,CAAE,IALE,CAArB,CAQA;AACA;AACA,cAAe,SAASC,CAAAA,OAAT,EAAgD,IAA9BC,CAAAA,KAA8B,2DAAtBP,YAAsB,IAARQ,CAAAA,MAAQ,2CAC7D,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKlB,CAAAA,eAAL,CACE,sCACKgB,KADL,MAEEN,QAAQ,oBAAMO,MAAM,CAACP,QAAb,CAFV,GAKF,IAAKT,CAAAA,WAAL,CACE,sCACKe,KADL,MAEEJ,QAAQ,CAAE,IAFZ,CAGED,IAAI,8BAAMK,KAAK,CAACL,IAAZ,GAAkBM,MAAM,CAACE,OAAzB,EAHN,GAMF,IAAKf,CAAAA,oBAAL,CACE,sCACKY,KADL,MAEEL,IAAI,8BAAMK,KAAK,CAACL,IAAZ,qBAAqBM,MAAM,CAACP,QAA5B,EAFN,GAKF,IAAKR,CAAAA,oBAAL,CACE,sCACKc,KADL,MAEEJ,QAAQ,CAAE,IAFZ,CAGED,IAAI,CAAEK,KAAK,CAACL,IAAN,CAAWS,GAAX,CAAe,SAAAD,OAAO,CAAI,CAC9B,GAAIF,MAAM,CAACI,GAAP,GAAeF,OAAO,CAACE,GAA3B,CAAgC,CAC9BF,OAAO,CAACG,gBAAR,CAA2BL,MAAM,CAACK,gBAAlC,CACD,CACD,MAAOH,CAAAA,OAAP,CACD,CALK,CAHR,GAWF,IAAKhB,CAAAA,gBAAL,CACE,GAAIoB,CAAAA,QAAQ,CAAGP,KAAK,CAACL,IAAN,CAAWa,MAAX,CAAkB,SAAAL,OAAO,CAAI,CAC1C,MAAOA,CAAAA,OAAO,CAACE,GAAR,GAAgBJ,MAAM,CAACI,GAA9B,CACD,CAFc,CAAf,CAIA,sCACKL,KADL,MAEEJ,QAAQ,CAAEW,QAAQ,CAACE,MAAT,CAAkB,CAF9B,CAGEd,IAAI,CAAEY,QAHR,GAMF,IAAKhB,CAAAA,UAAL,CACE,sCACKS,KADL,MAEEJ,QAAQ,CAAE,KAFZ,CAGED,IAAI,CAAE,EAHR,GAMF,IAAKH,CAAAA,WAAL,CACE,sCACKQ,KADL,MAEEJ,QAAQ,CAAE,CAACI,KAAK,CAACJ,QAFnB,GAKF,IAAKP,CAAAA,iBAAL,CACE,sCACKW,KADL,MAEEH,UAAU,oBAAMI,MAAM,CAACJ,UAAb,CAFZ,GAKF,IAAKP,CAAAA,uBAAL,CACE,sCACKU,KADL,MAEEF,eAAe,CAAEG,MAAM,CAACH,eAF1B,GAKF,QACE,MAAOE,CAAAA,KAAP,CArEJ,CAuED,EAED;AACA;AACA","sourcesContent":["import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\n//add initial state\nconst initialState = {\n  products: [],\n  cart: [],\n  cartOpen:false,\n  categories:[],\n  currentCategory: null,\n}\n\n//create reducer function\n// export const reducer = (state, action) => {\nexport default function reducer (state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\n// export function useProductReducer(initialState) {\n//   return useReducer(reducer, initialState)\n// }"]},"metadata":{},"sourceType":"module"}